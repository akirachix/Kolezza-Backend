name: Django CI/CD
on:
  push:
    branches:
      - main
      - staging
  pull_request:
    branches:
      - main
      - staging

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:13  
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: test_db
        ports:
          - 5432:5432
        options: >-
          --health-cmd "pg_isready -U postgres"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          pip install -r kolezzaSawaTok/requirements.txt

      - name: Install Black
        run: |
          pip install black

      - name: Check code formatting with Black
        id: action_black
        run: |
          black --check .

      - name: Wait for PostgreSQL to be ready
        run: |
          until pg_isready -h localhost -p 5432 -U postgres; do
            echo "Waiting for PostgreSQL..."
            sleep 1
          done

      - name: Set up database settings for Django
        run: |
          echo "DATABASES = {
              'default': {
                  'ENGINE': 'django.db.backends.postgresql',
                  'NAME': 'test_db',
                  'USER': 'postgres',
                  'PASSWORD': 'postgres',
                  'HOST': 'localhost',
                  'PORT': '5432',
              }
          }" >> kolezzaSawaTok/kolezzaSawaTok/settings.py

      - name: Run migrations
        run: |
          python manage.py migrate

      - name: Run tests
        run: |
          python manage.py test

      - name: Create Pull Request if Black Reformats
        if: steps.action_black.outcome == 'failure'
        uses: peter-evans/create-pull-request@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          title: "Format Python code with psf/black"
          commit-message: ":art: Format Python code with psf/black"
          body: "This pull request formats the code using Black."
          base: ${{ github.head_ref }}
          branch: actions/black
